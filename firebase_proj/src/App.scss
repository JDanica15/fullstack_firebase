.drawer {
  position: relative;
  display: grid;
  grid-auto-columns: max-content auto;
  width: 100%;
}

.drawer-toggle {
  -webkit-appearance: none;
  appearance: none;
  height: 0;
  opacity: 0;
  position: fixed;
  width: 0;
}

.drawer-content {
  grid-column-start: 2;
  grid-row-start: 1;
  min-width: 0px;
}

.drawer-side {
  pointer-events: none;
  position: fixed;
  inset-inline-start: 0px;
  top: 0;
  grid-column-start: 1;
  grid-row-start: 1;
  display: grid;
  width: 100%;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  grid-template-rows: repeat(1, minmax(0, 1fr));
  align-items: flex-start;
  justify-items: start;
  overflow-x: hidden;
  overflow-y: hidden;
  overscroll-behavior: contain;
  height: 100vh;
  height: 100dvh;
}

.drawer-side>* {
  grid-column-start: 1;
  grid-row-start: 1;
}

.drawer-toggle:checked~.drawer-side {
  pointer-events: auto;
  visibility: visible;
}

a {
  color: inherit;
  text-decoration: inherit;
}

.justify-between {
  justify-content: space-between;
}

.w-11\.5 {
  width: 2.875rem;
}

.h-11\.5 {
  height: 2.875rem;
}

// OVERRIDE SVG
.card-icon svg {
  fill: #3c50e0;
  width: 22px;
  height: 22px;
}

.fill-orange-600 {
  fill: #ea580c;
}

.z-33 {
  z-index: 33;
}

// backgroundcolor
.bg-base-100 {
  opacity: 1;
  background-color: #fff
}

.bg-base-200 {
  opacity: 1;
  background-color: #f2f2f2;
}

.bg-meta-2 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 242 247 / var(--tw-bg-opacity));
}

.bg-primary {
  --tw-bg-opacity: 1;
  background-color: #4a00ff;
}

// PADDING & MARGIN
.px-7\.5 {
  padding-left: 1.875rem;
  padding-right: 1.875rem;
}

// shadow
.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / .1), 0 2px 4px -2px rgb(0 0 0 / .1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-default {
  --tw-shadow: 0px 8px 13px -3px rgba(0, 0, 0, .07);
  --tw-shadow-colored: 0px 8px 13px -3px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

// navbar header
.navbar {
  display: flex;
  align-items: center;
  padding: .5rem;
  min-height: 4rem;
  width: 100%;
}

// MENU
.menu {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  font-size: .875rem;
  line-height: 1.25rem;
  padding: .5rem;

  :where(li ul) {
    position: relative;
    white-space: nowrap;
    margin-inline-start: 1rem;
    padding-inline-start: 0.5rem;

    &:before {
      background-color: #1f2937;
      bottom: 0.75rem;
      content: "";
      inset-inline-start: 0;
      opacity: 0.1;
      position: absolute;
      top: 0.75rem;
      width: 1px;
    }
  }

  :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)) {
    display: grid;
    grid-auto-flow: column;
    align-content: flex-start;
    align-items: center;
    gap: .5rem;
    grid-auto-columns: minmax(auto, max-content) auto max-content;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    border-radius: var(--rounded-btn, .5rem);
    padding: .5rem 1rem;
    text-align: start;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    transition-duration: .2s;
    text-wrap: balance;
  }

  :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
    display: grid;
    grid-auto-flow: column;
    align-content: flex-start;
    align-items: center;
    gap: .5rem;
    grid-auto-columns: minmax(auto, max-content) auto max-content;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
  }

  li.disabled {
    cursor: not-allowed;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    color: var(--fallback-bc, oklch(var(--bc)/.3));
  }

  :where(li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title):not(.active):hover) {
    background-color: #1f29371a;
    cursor: pointer;
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

:where(.menu li) {
  position: relative;
  display: flex;
  flex-shrink: 0;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: stretch;
}

.drawer-side {
  >.drawer-overlay {
    position: sticky;
    top: 0;
    place-self: stretch;
    cursor: pointer;
    background-color: transparent;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    transition-duration: .2s;
  }

  > :not(.drawer-overlay) {
    -webkit-transform: translateX(-100%);
    transform: translateX(-100%);
    transition-duration: .3s;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    will-change: transform;

    .drawer-toggle:checked~& {
      -webkit-transform: translateX(0);
      transform: translateX(0);
    }
  }
}

.flex {
  display: flex;
}


@media (min-width: 1024px) {
  .lg\:drawer-open {
    >.drawer-toggle~.drawer-side>.drawer-overlay {
      cursor: default;
      background-color: transparent;
    }

    >.drawer-toggle~.drawer-side> :not(.drawer-overlay),
    [dir=rtl] &>.drawer-toggle~.drawer-side> :not(.drawer-overlay) {
      -webkit-transform: translateX(0);
      transform: translateX(0);
    }

    >.drawer-side {
      overflow-y: auto;
    }

    >.drawer-toggle {
      display: none;

      ~.drawer-side {
        pointer-events: auto;
        visibility: visible;
        position: sticky;
        display: block;
        width: auto;
        overscroll-behavior: auto;
      }
    }
  }

  .drawer-side {
    >*:not(.drawer-overlay) {
      transition-property: transform;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
      transition-duration: 0.3s;
      will-change: transform;
      transform: translate(-100%);
    }
  }

  .lg\:hidden {
    display: none;
  }
}

@media (prefers-reduced-motion: no-preference) {
  .btn {
    animation: button-pop var(--animation-btn, .25s) ease-out
  }
}